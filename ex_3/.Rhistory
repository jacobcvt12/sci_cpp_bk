print(ctt)
rst <- proc.time()
rt <- sum(a)
rtt <- proc.time() - rst
install.packages("microbenchmark")
source('~/R/Sum_of_100e6.R', echo=TRUE)
source('~/R/Sum_of_100e6.R', echo=TRUE)
source('~/R/Sum_of_100e6.R', echo=TRUE)
library(Rcpp)
sourceCpp(file="~/R/cpp/f5.cpp")
f2
x <- 1:10
f2(x)
q()
install.packages('rationalfun')
library(rationalfun)
f <- rationalfun(1, 5)
f
f <- rationalfun(2, 10)
f
simplify(f)
1/49
48/84
i = 22
as.chacter(i)
as.character(i)
chars <- strsplit(as.character(i), "")
chars
chars[1]
chars[2]
chars <- unlist(strsplit(as.character(i), ""))
chars
chars[1]
chars[2]
chars[1]
as.numeric(chars[1])
as.numeric(chars[1]) < as.numeric(chars[2])
paste(1, 2)
paste(1, 2, collapse="")
paste(1, 2, collapse='')
chars <- unlist(strsplit(as.character(i), ""))
num1 <- as.numeric(chars[1])
num2 <- as.numeric(chars[2])
if (num1 < num2) {
low <- num1
high <- num2
}
else {
low <- num2
high <- num1
}
chars <- unlist(strsplit(as.character(i), ""))
num1 <- as.numeric(chars[1])
num2 <- as.numeric(chars[2])
if (num1 < num2) {
low <- num1
high <- num2
} else {
low <- num2
high <- num1
}
low
high
paste(c(low, high))
paste(c(low, high), collapse="")
48/84
49/94
48/81
48/85
48/86
48/87
48/88
48/89
4/9
4/7
4/6
4/5
49/98
4/8
num1
49/98
49/98 == 4/8
rep(0, 4)
(49/94)
(49/98==4/8)
(49/98==4/8 and 2<3)
(49/98==4/8 & 2<3)
2 != 0
source('~/R/p33.R', echo=TRUE)
install.packages("plyr")
library(plyr)
?plyr
install.packages("MVA")
demo("ch-MVA")
demo("Ch-MVA")
library("MVA")
demo("Ch-MVA")
mydata
library(data)
library(MASS)
?MASS
??MASS
library(datasets)
iris
mydata <- iris
data <- matrix(c(1, 3, 4, 5), nrow=3 )
data <- matrix(c(1, 3, 4, 5), nrow=2)
data
data <- matrix(c(16.7,17.1,18.2,18.1,17.2,18.2,16.0,17.2,18.0,17.2,16.9,17.1,18.2,17.3,17.5,16.6,91,105,106,108,88,91,58,82,81,65,61,48,61,43,33,36), nrow=16)
data
df <- as.data.frame(data, c("Field1", "Field2"))
df
df <- as.data.frame(data, row.names=c("Field1", "Field2"))
df
df <- as.data.frame(data)
df
colnames(df) <- c("Field1", "Field2")
df
df$Field1
colnames(df) <- c("Viscosity", "Temperature")
df$Viscosity
fit <- lm(Viscosity ~ Temperature, data=df)
summary(fit)
fit
?anova
anova(fit)
?lm
?anova
summary(anova(fit))
print(anova(fit))
0:9
0.0
0.0:9.0
1:2:10
datasets
library(datasets)
??datasets
library(help="datasets")
summary(USArrests)
colnames(USArrests)
data(AirPassengers)
AP <- AirPassengers
AP
class(AP)
start(AP)
start(AP); end(AP); frequency(AP)
summary(AP)
plot(AP, ylab="Passengers (1000's)")
aggregate(AP)
cycle(AP)
layout(1:2)
layout(1:2)
plot(aggregate(AP))
boxplot(AP~cycle(AP))
AP~cycle(AP)
www <- "http://www.massey.ac.nz/~pscowper/ts/Maine.dat"
Maine.mont <- read.table(www, header=T)
www <- "http://elena.aut.ac.nz/~pcowpert/ts/Maine.dat"
Maine.month <- read.table(www, header=T)
class(Maine.month)
Maine.month.ts <- ts(unemploy, start=c(1996, 1), freq=12)
Maine.month.ts <- ts(Maine.month$unemploy, start=c(1996, 1), freq=12)
plot(Maine.month.ts)
plot(Maine.month.ts)
www <- "http://elena.aut.ac.nz/~pcowpert/ts/pounds_nz.dat"
Z <- read.table(www, header=T)
Z[1:4, ]
Z.ts <- ts(Z, st=1991, fr=4)
Z.ts
plot(Z.ts)
Z.92.96 <- window(Z.ts, start=c(1992, 1), end=c(1996, 1))
Z.96.98 <- window(Z.ts, start=c(1996, 1), end=c(1998, 1))
layout(1:2)
plot(Z.92.96)
plot(Z.96.98)
www <- "http://elena.aut.ac.nz/~pcowpert/ts/global.dat"
Global <- scan(www)
Global.ts <- ts(Global, start = c(1856, 1), end=c(2005, 12), fr=12)
plot(Global.ts)
Global.annual <- aggregate(Global.ts, FUN=mean)
plot(Global.annual)
plot(Global.annual)
class(Global.annual)
qplot(Global.annual)
library(ggplot2)
qplot(Global.annual)
plot(Global.annual)
?plot(Global.annual)
New.series <- window(Global.ts, start=c(1970, 1))
class(New.series)
end(New.series)
start(New.series)
?time
New.time <- time(New.series)
class(New.time)
New.series
New.time
plot(New.series)
abline(reg=lm(New.series~New.time))
www <- "http://elena.aut.ac.nz/~pcowpert/ts/cbe.dat"
CBE <- read.table(www, header=T)
Beer.ts <- ts(CBE[,2], start=1958, freq=12)
ts.plot(Beer.ts)
plot(Beer.ts)
plot(Beer.ts, ylab="Beer", main="Time plot of Beer")
Bear.year <- aggregate(Beer.ts)
plot(Bear.year)
plot(Bear.ts)
Beer.year <- aggregate(Beer.ts)
plot(Beer.year)
plot(Beer.ts)
Beer.year <- aggregate(Beer.ts, FUN=mean)
plot(Beer.year)
cycle(Beer.ts)
boxplot(cycle(Beer.ts))
boxplot(Beer.ts~cycle(Beer.ts))
boxplot(Beer.ts~cycle(Beer.ts), main="test")
boxplot(Beer.ts~cycle(Beer.ts), ylab="test")
plot(Beer.ts)
decompose(Beer.ts)
ts.plot(decompose(Beer.ts))
plot.ts(decompose(Beer.ts))
?decompose
plot(decompose(Beer.ts))
plot(decompose(Beer.ts, type="multi"))
plot(decompose(Beer.ts))
ts.plot(c(Beer.ts))
Beer.decompose <- decompose(Beer.ts)
ts.plot(c(Beer.ts, Beer.decompose$seasonal))
ts.plot(c(Beer.ts, Beer.decompose$seasonal*Beer.decompose$trend))
ts.plot(c(Beer.decompose$seasonal*Beer.decompose$trend))
ts.plot(c(Beer.decompose$trend))
ts.plot(c(Beer.decompose$trend*Beer.decompose$seasonal))
ts.plot(c(Beer.decompose$seasonal))
trend <- Beer.decompose$trend
season <- Beer.decompose$seasonal
ts.plot(c(trend))
ts.plot(c(trend, trend*seasonal))
ts.plot(c(trend, trend*season))
ts.plot(c(trend, trend*season), lty=1:2)
ts.plot(c(trend, trend*season))
ts.plot(c(trend, trend+season))
ts.plot(c(trend+season))
ts.plot(c(trend+season, Beer.ts))
ts.plot(c(trend+season, trend))
ts.plot(c(trend+season, trend), lty=1)
ts.plot(c(trend+season, trend), lty=1:2)
ts.plot(cbind(trend, trend+season))
ts.plot(cbind(trend, trend+season), lty=1:2)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
Auto <- matrix(c(0.33, 18, 0.5, 20000, 2000, 0.8, 1500, 1.6), byrow=T, nrow=2)
Auto
Auto <- matrix(c(0.33, 18, 0.5, 20000, 2000, 0.8, 1500, 1.6,
40, 40, 20, 60, 3, 80, 2, 120, 2, 200, 1, 160),
byrow=T, nrow=4)
Auto.df <- data.frame(matrix)
Auto.df
Auto.df <- as.data.frame(matrix)
Auto.df
Auto.df <- data.frame(Auto)
Auto.df
Auto <- matrix(c(0.33, 18, 0.5, 20000, 2000, 0.8, 1500, 1.6,
40, 40, 20, 60, 3, 80, 2, 120, 2, 200, 1, 160),
byrow=T, nrow=5)
Auto.df <- data.frame(Auto, row.names=c("car", "petrol", "servicing",
"tyre", "clutch"))
colnames(Auto.df) <- c("quantity.00", "unit.price.00",
"quantity.04", "unit.price.04")
Auto.df
Auto.df$quantity.00*Auto.df$unit.price.04
LI_t <- sum(Auto.df$quantity.00*Auto.df$unit.price.04)/
sum(Auto.df$quantity.00*Auto.df$unit.price.00)
LI_t
PI_t <- sum(Auto.df$quantity.04*Auto.df$unit.price.04)/
sum(Auto.df$quantity.04*Auto.df$unit.price.00)
PI_t
Auto.df
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
View(Auto.df)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
?invisible
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
month.name[1]
month.abb[1]
boxplot(Beer.ts~cycle(Beer.ts), xlab="Month", ylab="Beer (Ml)", main="Monthly Production of Austrial Beer")
boxplot(Beer.ts~cycle(Beer.ts), xlab="Month", ylab="Beer (Ml)", main="Monthly Production of Austrial Beer", xlim=month.abb[1:12])
month.abb[1:12]
cycle(Beer.ts)
?replace
for (each in cycle(Beer.ts)) print(each)
test <- cycle(Beer.ts)
test[1, ]
test[1]
test[2]
test[3]
test[4]
test[5]
for (i in 1:12) {
test[i] <- month.abb[i]
}
test
test["Jan"]
test$Jan
class(test)
test[13]
test[14]
length(test)
test[396]
as.numeric(test[396])
test <- cycle(Beer.ts)
for (i in 1:length(Beer.ts)) {
num <-
;;
for (i in 1:length(test)) {
num <- as.numeric(test[i])
test[i] <- month.abb[num]
}
test
boxplot(Beer.ts~test)
boxplot(Beer.ts~cycle(Beer.ts))
axis(1, 1:12, month.abb[1:12])
boxplot(Beer.ts~cycle(Beer.ts), xaxt="n")
axis(1, 1:12, month.abb[1:12])
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
plot(Beer.decompose, xlab="Year")
Beer.decompose$random
median(Beer.decompose$random)
median(Beer.decompose$random, na.rm=T)
median(abs(Beer.decompose$random), na.rm=T)
Beer.mult <- decompose(Beer.ts, "multi")
median(abs(Beer.mult$random), na.rm=T)
plot(Beer.mult)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
source('~/R/Time_Series_R/chap_1.R', echo=TRUE)
ts.plot(cbind(Beer.ts, Trend*Seasonal), lty=1:2)
www
www <- "http://elena.aut.ac.nz/~pcowpert/ts/Herald.dat"
Herald.dat <- read.table(www, header=T)
summary(Herald.dat)
x <- Herald.dat$CO
y <- Herald.dat$Benzoa
n <- length(x)
sum((x-mean(x))*(y-mean(y)))/(n-1)
cov(x, y)
cor(x, y)
www
install.packages("knitr")
www <- "http://www.massey.ac.nz/~pscowper/ts/wave.dat"
wave.dat <- read.table(www, header=T)
www <- "http://elena.aut.ac.nz/~pcowpert/ts/wave.dat"
wave.dat <- read.table(www, header=T)
attach(wave.dat)
plot(ts(waveht)); plot(ts(waveht[1:60]))
layout(1:2)
layout(1:2)
layout(1:2)
plot(ts(waveht)); plot(ts(waveht[1:60]))
waveht
acf(waveht)
?acf
acf(waveht)$acf
acf(waveht)$acf[2]
www
www2 <- "http://elena.aut.ac.nz/~pcowpert/ts/varnish.dat"
varnish <- read.table(www2, header=T)
summary(varnish)
varnish
acf(waveht)$acf
acf(waveht)$acf[2]
plot(acf(waveht)$acf)
plot(acf(waveht)$acf[2])
plot(acf(waveht)$acf[2:])
plot(acf(waveht)$acf[2:26])
AP <- data(AirPassengers)
AP.decom <- decompose(AP, "multi")
AP.decom <- decompose(AP, "multiplicative")
?decompose
class(AP)
AP
data(AirPassengers)
AP <- AirPassengers
AP.decom <- decompose(AP, "multiplicative")
plot(ts(AP.decom$random[7:138]))
acf(ts(AP.decom$random[7:138]))
install.packages("xtable")
library(xtable)
?xtable
Auto <- matrix(c(0.33, 18000, 0.5, 20000, 2000, 0.8, 1500, 1.6,
40, 40, 20, 60, 3, 80, 2, 120, 2, 200, 1, 360),
byrow=T, nrow=5)
Auto.df <- data.frame(Auto, row.names=c("car", "petrol", "servicing",
"tyre", "clutch"))
colnames(Auto.df) <- c("quantity.00", "unit.price.00",
"quantity.04", "unit.price.04")
xtable(Auto.df)
print(xtable(Auto.df))
Sys.which("mactex")
Sys.which("pdflatex")
Sys.getenv("PATH")
.rs.is_tex_installed()
rs.is_tex_installed()
www <- "http://elena.aut.ac.nz/~pcowpert/ts/global.dat"
Global <- scan(www)
Global.ts <- ts(Global, st=1856, fr=12)
Global.decom <- decompose(Global.ts)
plot(Global.decom)
Seasonal <- Global.decom$seasonal
Trend <- Global.decom$trend
sd(Global.ts)
sd(Global.ts-Seasonal)
ts.plot(c(Trend, Trend+Seasonal), lty=1:2)
ts.plot(c(Trend, Trend+Seasonal), lty=1:2)
ts.plot(cbind(Trend, Trend+Seasonal), lty=1:2)
Random <- Global.decom$random
length(Random)
Rand.acf <- acf(ts(Random[7:length(Random)-6]))
length(Random)-6
Rand.acf <- ts(Random[7:length(Random)-6])
acf(Rand.acf)
Rand.acf
class(Random)
Rand.acf <- acf(Random[7:length(Random)-6])
Random[1:12]
Random[1790:1800]
Random[1794]
Random[1795]
Rand.acf <- acf(Random[7:1794])
length(Random)-6
Rand.acf <- acf(Random[7:length(Random)-6])
Rand.acf <- acf(Random[7:1794])
Rand.acf <- acf(Random[7:1794])
Box.test(Random[7:1794])
T79 <- 1:10
Tdelt <- (1:100)/10
Sales <- c(840, 1470,2110, 4000, 7590, 10950, 10530, 9470, 7790, 5890)
Cusales <- cumsum(Sales)
?nls
Bass.nls <- nls(Sales~M*(((P+Q)^2 / P) * exp(-(P+Q) * T79) / (1+(Q/P) * exp(-(P+Q)*T79))^2, start=list(M=60630, P=0.03, Q=0.38)))
Bass.nls <- nls(Sales~M*(((P+Q)^2 / P) * exp(-(P+Q) * T79) / (1+(Q/P) * exp(-(P+Q)*T79))^2), start=list(M=60630, P=0.03, Q=0.38))
summary(Bass.nls)
Bcoef <- coef(Bass.nls)
m <- Bcoef[1]
p <- Bcoef[2]
q <- Bcoef[3]
ngete <- exp(-(p+q)*Tdelt)
Bpdf <- m*((p+q)^2 / p) *ngete/(1+(q/p)*ngete)^2
plot(Tdelt, Bpdf)
plot(Tdelt, Bpdf, type='l')
points(T79, Sales)
www <- "http://elena.aut.ac.nz/~pcowpert/ts/motororg.dat"
Motor.dat <- read.table(www, header=T)
attach(Motor.dat)
comp.ts <- ts(complaints, start=1996, fr=12)
plot(comp.ts, xlab="Months", ylab="Complaints")
plot(decompose(compts))
plot(decompose(comp.ts))
plot(decompose(comp.ts, "multi"))
comp.hw <- HoltWinters(comp.ts, beta=0, gamma=0)
plot(comp.hw)
comp.hw
comp.hw <- HoltWinters(complaints, beta=0, gamma=0)
comp.hw <- HoltWinters(complaints, alpha=0.2)
comp.hw <- HoltWinters(complaints, beta=F, gamma=F)
comp.hw
comp.hw$SSE
comp.hw <- HoltWinters(complaints, beta=F, gamma=F, alpha=0.2)
comp.hw
plot(comp.hw)
q()
A = matrix(c(4, 10, 1, 1), nrow=2, byrow=T)
A
inv(A)
inverse(A)
library(MASS)
ginv(A)
det(A)
ls
pwd
pwd()
wd()
wd
cwd
cwd()
setwd('~/Code/cpp/sci_cpp/ex_3')
gwd()
?setwd
getwd()
df <- read.table('xy.dat', sep=' ')
df
library(ggplot2)
qplot(x, y)
qplot(V1, V2, data=df)
attach(df)
x <- seq(from=0, to=0.95, by=0.05)
x
V1
y <- exp(V1)
y
y <- exp(-V1)
y
qplot(V1, y)
?qplot(V1, y)
plot(V1, y)
qplot(V1, y) + geom_line()
qplot(V1, y) + geom_line(data=df)
qplot(V1, V2) + qplot(V1, y)
y-V2
